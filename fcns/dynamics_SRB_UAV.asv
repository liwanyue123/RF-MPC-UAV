function dXdt = dynamics_SRB_UAV(t,Xt,Ut,Xd,U_ext,p)
%单刚体模型的动力学方程
% Xt 当前状态
% Ut 当前控制量
% Xd 期望状态
% U_ext 额外扰动
% p 参数
%% parameters
mass = p.mass;
J = p.J;       % inertia tensor in body frame {B}
g = 9.81;

%% decompose
% X = [pc dpc vR wb pf]'
pc = reshape(Xt(1:3),[3,1]);%当前位置
dpc = reshape(Xt(4:6),[3,1]);%当前质心速度
R = reshape(Xt(7:15),[3,3]);%当前姿态
wb = reshape(Xt(16:18),[3,1]);%当前角速度
r34w = R*p.r34;


% r
% r34 = pf34 - repmat(pc,[1,4]);

% GRF
f34w = reshape(fcn_get_T_fw_u(R)*Ut,[3,4]);

%为了预测才需要线性化，这里只是模拟个仿真器，不需要
%% dynamics
ddpc = 1/mass * (sum(f34w,2) + U_ext) + [0;0;-g];%sum(f34w,2) 是四个足端的受力的合力
dR = R * hatMap(wb);

tau_s = zeros(3,1);       % body torque expressed in {S}
for ii = 1:4
    tau_s = tau_s + hatMap(r34w(:,ii)) * f34w(:,ii);%四个足端的受力的合外力矩
end
tau_rotor = fcn_get_T_Mrb_u(p)*Ut%caused by motor in the body frame

tau_ext = hatMap(R * p.p_ext) * U_ext;%外力矩扰动，包括姿态扰动和足端那边的外力扰动
tau_tot = sum(tau_s,2) +tau_ext;%合外力矩 世界坐标系下
dwb = J \ (R' * tau_tot + tau_rotor- hatMap(wb) * J * wb);%机身坐标系下的角加速度


dXdt = [dpc;ddpc;dR(:);dwb];


end





