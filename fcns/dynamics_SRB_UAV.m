function dXdt = dynamics_SRB_UAV(t,Xt,Ut,Xd,U_ext,p)
% Dynamic equation of the single rigid body (SRB) model
% Xt: current state
% Ut: current control input
% Xd: reference state
% U_ext: external disturbance
% p: parameters

%% Parameters
mass = p.mass;
J = p.J; % inertia tensor in body frame {B}
g = 9.81;

%% Decompose
% X = [pc dpc vR wb pf]'
pc = reshape(Xt(1:3),[3,1]); % current position
dpc = reshape(Xt(4:6),[3,1]); % current velocity of the center of mass
R = reshape(Xt(7:15),[3,3]); % current attitude
wb = reshape(Xt(16:18),[3,1]); % current angular velocity in the body frame {B}
 

% r
r34w = R*p.r34;

% GRF
f34w = reshape(fcn_get_T_fw_u(R)*Ut,[3,4]);

%% Dynamics
ddpc = 1/mass * (sum(f34w,2) + U_ext) + [0;0;-g]; % acceleration of the center of mass
dR = R * hatMap(wb); % time derivative of the rotation matrix

tau_s = zeros(3,1); % body torque expressed in {S}
for ii = 1:4
    tau_s = tau_s + hatMap(r34w(:,ii)) * f34w(:,ii); % total torque generated by the ground reaction force at each foot
end
tau_rotor = fcn_get_T_Mrb_u(p)*Ut; % torque generated by the motors in the body frame {B}
tau_ext = hatMap(R * p.p_ext) * U_ext; % external torque disturbance
tau_tot = sum(tau_s,2) +tau_ext; %n the world frame {W}
dwb = J \ (R' * tau_tot + tau_rotor - hatMap(wb) * J * wb); % angular acceleration in the body frame {B}

dXdt = [dpc;ddpc;dR(:);dwb];
end